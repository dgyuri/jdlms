/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;

public class Parameterized_Access implements AxdrType {

    public byte[] code = null;
    public Integer16 variable_name = null;

    public Unsigned8 selector = null;

    public Data parameter = null;

    public Parameterized_Access() {
    }

    public Parameterized_Access(byte[] code) {
        this.code = code;
    }

    public Parameterized_Access(Integer16 variable_name, Unsigned8 selector, Data parameter) {
        this.variable_name = variable_name;
        this.selector = selector;
        this.parameter = parameter;
    }

    @Override
    public int encode(BerByteArrayOutputStream axdrOStream) throws IOException {

        int codeLength;

        if (code != null) {
            codeLength = code.length;
            for (int i = code.length - 1; i >= 0; i--) {
                axdrOStream.write(code[i]);
            }
        }
        else {
            codeLength = 0;
            codeLength += parameter.encode(axdrOStream);

            codeLength += selector.encode(axdrOStream);

            codeLength += variable_name.encode(axdrOStream);

        }

        return codeLength;

    }

    @Override
    public int decode(InputStream iStream) throws IOException {
        int codeLength = 0;

        variable_name = new Integer16();
        codeLength += variable_name.decode(iStream);

        selector = new Unsigned8();
        codeLength += selector.decode(iStream);

        parameter = new Data();
        codeLength += parameter.decode(iStream);

        return codeLength;
    }

    public void encodeAndSave(int encodingSizeGuess) throws IOException {
        BerByteArrayOutputStream axdrOStream = new BerByteArrayOutputStream(encodingSizeGuess);
        encode(axdrOStream);
        code = axdrOStream.getArray();
    }

    @Override
    public String toString() {
        return "sequence: {" + "variable_name: " + variable_name + ", selector: " + selector + ", parameter: "
                + parameter + "}";
    }

}
